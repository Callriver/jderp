<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jdsoft.orm.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.jdsoft.orm.model.User">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_pwd" jdbcType="VARCHAR" property="userPwd" />
    <result column="user_file_space" jdbcType="VARCHAR" property="userFileSpace" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.jdsoft.orm.model.User">
    insert into user (user_id, user_name, user_pwd, 
      user_file_space, user_phone, user_email
      )
    values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR}, 
      #{userFileSpace,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.jdsoft.orm.model.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_pwd = #{userPwd,jdbcType=VARCHAR},
      user_file_space = #{userFileSpace,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_id, user_name, user_pwd, user_file_space, user_phone, user_email
    from user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select user_id, user_name, user_pwd, user_file_space, user_phone, user_email
    from user
  </select>
  <select id="selectByUserIdPwd" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_id, user_name, user_pwd, user_file_space, user_phone, user_email
    from user
    where user_id = #{loginCode,jdbcType=VARCHAR}
    and user_pwd = #{password,jdbcType=VARCHAR}
  </select>
  <select id="selectByUserPhonePwd" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_id, user_name, user_pwd, user_file_space, user_phone, user_email
    from user
    where user_phone = #{loginCode,jdbcType=VARCHAR}
      and user_pwd = #{password,jdbcType=VARCHAR}
  </select>
  <select id="selectByUserEmailPwd" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_id, user_name, user_pwd, user_file_space, user_phone, user_email
    from user
    where user_email = #{loginCode,jdbcType=VARCHAR}
      and user_pwd = #{password,jdbcType=VARCHAR}
  </select>
  <select id="checkUserExist" resultType="java.lang.Integer">
    select count(1)
    from user
    where user_id = #{userId,jdbcType=VARCHAR}
    or  user_phone = #{userPhone,jdbcType=VARCHAR}
    or  user_email = #{userEmail,jdbcType=VARCHAR}
  </select>
</mapper>